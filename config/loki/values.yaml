loki:
  config: |
    server:
      http_listen_port: 3100
    distributor:
      ring:
        kvstore:
          store: memberlist
    memberlist:
      join_members:
        - {{ include "loki.fullname" . }}-memberlist
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_retain_period: 1m
      max_transfer_retries: 0
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
    schema_config:
      configs:
        - chunks:
            period: 360h
            prefix: loki_chunk_
          from: "2021-02-01"
          index:
            period: 24h
            prefix: loki_index_
          object_store: aws
          schema: v11
          store: boltdb-shipper
    storage_config:
      boltdb_shipper:
        shared_store: aws
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
      aws:
        bucketnames: "loki"
        endpoint: "minio:9000"
        s3forcepathstyle: true
        insecure: true
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      creation_grace_period: 3h
      poll_interval: 10m
      retention_deletes_enabled: false
      retention_period: 0s
    query_range:
      align_queries_with_step: true
      max_retries: 5
      split_queries_by_interval: 15m
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_items: 1024
            validity: 24h
    frontend_worker:
      frontend_address: {{ include "loki.queryFrontendFullname" . }}:9095
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
    compactor:
      shared_store: filesystem
    ruler:
      storage:
        type: local
        local:
          directory: /etc/loki/rules
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx

tableManager:
  enabled: true

memcachedExporter:
  enabled: true

memcachedChunks:
  enabled: true

memcachedFrontend:
  enabled: true

memcachedIndexQueries:
  enabled: true

memcachedIndexWrites:
  enabled: true

ingester:
  replicas: 2
  extraArgs:
    - -s3.access-key-id=$(accesskey)
    - -s3.secret-access-key=$(secretkey)
  extraEnvFrom:
    - secretRef:
        name: minio

querier:
  replicas: 1
  extraArgs:
    - -s3.access-key-id=$(accesskey)
    - -s3.secret-access-key=$(secretkey)
  extraEnvFrom:
    - secretRef:
        name: minio
gateway:
  basicAuth:
    enabled: true
    username: loki
    password: password
  nginxConfig: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    events {
      worker_connections  4096;  ## Default: 1024
    }
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
      sendfile     on;
      tcp_nopush   on;
      resolver {{ .Values.global.dnsService }}.kube-system.svc.{{ .Values.global.clusterDomain }};
      server {
        proxy_set_header     X-Scope-OrgID 1;
        listen             8080;
        {{- if .Values.gateway.basicAuth.enabled }}
        auth_basic           {{ .Values.gateway.basicAuth.username }};
        auth_basic_user_file /etc/nginx/secrets/.htpasswd;
        {{- end }}
        location = / {
          return 200 'OK';
          auth_basic off;
        }
        location = /api/prom/push {
          proxy_pass       http://{{ include "loki.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        }
        location = /api/prom/tail {
          proxy_pass       http://{{ include "loki.querierFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location ~ /api/prom/.* {
          proxy_pass       http://{{ include "loki.queryFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        }
        location = /loki/api/v1/push {
          proxy_pass       http://{{ include "loki.distributorFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        }
        location = /loki/api/v1/tail {
          proxy_pass       http://{{ include "loki.querierFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location ~ /loki/api/.* {
          proxy_pass       http://{{ include "loki.queryFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
        }
      }
    }
