---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth-alertmanager
  labels:
    app: oauth-proxy
    target: alertmanager
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: oauth-proxy
      target: alertmanager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oauth-proxy
        target: alertmanager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: oauth-proxy
                  target: alertmanager
              topologyKey: kubernetes.io/hostname
            weight: 10
      containers:
      - args:
        - --provider=oidc
        - --oidc-issuer-url={{ .Values.amProxy.oidcProvider }}
        - --http-address=0.0.0.0:3000
        - --upstream=http://authz-proxy-alertmanager.{{ .Values.mla.namespace }}.svc.cluster.local:8080
        - --cookie-name=uc_alertmanager_oauth2_proxy
        - --proxy-prefix=/oauth
        - --ping-path=/oauth/healthy
        - --silence-ping-logging=true
        - --reverse-proxy=true
        - --skip-provider-button=true
        - --pass-user-headers=true
        - --set-xauthrequest=true
        - --set-authorization-header=true
        - --config=/config/config.yaml
        # TODO: do not use cookie-secure=false for production
        - --cookie-secure=false
        # TODO: redirect-url seems to be needed for HTTP
        - --redirect-url=http://{{ .Values.amProxy.domain }}/oauth/callback
        envFrom:
        - secretRef:
            name: oauth-alertmanager-secret
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthy
            port: http
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: oauth2-proxy
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthy
            port: http
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 200m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 25Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: oauth-alertmanager-configmap
        name: config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth-alertmanager-configmap
data:
  config.yaml: |
    email_domains = ["*"]
    scope = "groups openid email"
    skip_auth_regex = ["/-/healthy"]

---
apiVersion: v1
kind: Secret
metadata:
  name: oauth-alertmanager-secret
type: Opaque
data:
  OAUTH2_PROXY_CLIENT_ID: {{ .Values.amProxy.clientID | b64enc }}
  OAUTH2_PROXY_CLIENT_SECRET: {{ .Values.amProxy.clientSecret | b64enc }}
  OAUTH2_PROXY_COOKIE_SECRET: {{ .Values.amProxy.cookieSecret | b64enc }}

---
### TODO: THIS IS TEMPORARY, WILL BE EXPOSED VIA INGRESS
apiVersion: v1
kind: Service
metadata:
  name: mla-aletrmanager
spec:
  type: LoadBalancer
  ports:
    - name: http-alert
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app: oauth-proxy
    target: alertmanager
