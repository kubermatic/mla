---
apiVersion: v1
kind: ConfigMap
metadata:
  name: authz-proxy-alertmanager-config
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 9901
      
    static_resources:
      listeners:

      ### authorization and path rewiting proxy ###
      - name: listener_http
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:  
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:

                  # redirect if path does not end with slash
                  - match:
                      safe_regex:
                        google_re2: {}
                        regex: '^/(.+)/alertmanager$'
                    redirect:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: '^(.*)$'
                        substitution: '\1/'

                  # strip tenant ID from the path
                  - match:
                      safe_regex:
                        google_re2: {}
                        regex: '^/(.+)/alertmanager/(.*)'
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: '^/(.+)/alertmanager/(.*)'
                        substitution: '/api/prom/alertmanager/\2'
                      cluster: service_backend

              http_filters:
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ext-authz
              - name: envoy.filters.http.router

      ### limited access to envoy stats and health ###
      - name: service_stats
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 9902
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: service_stats
              route_config:
                name: local_route
                virtual_hosts:
                - name: stats_backend
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/stats"
                    route:
                      cluster: service_stats
                  - match:
                      prefix: "/ready"
                    route:
                      cluster: service_stats
              http_filters:
              - name: envoy.filters.http.router

      clusters:
      - name: service_backend
        connect_timeout: 2s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: service_backend
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: cortex-alertmanager.{{ .Values.mla.namespace }}.svc.cluster.local
                    port_value: 8080

      - name: ext-authz
        type: static
        connect_timeout: 0.1s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: ext-authz
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 50051

      - name: service_stats
        connect_timeout: 0.1s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: service_stats
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 9901

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authz-proxy-alertmanager
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: authz-proxy-alertmanager
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  template:
    metadata:
      annotations:
        prometheus.io/metrics_path: /stats/prometheus
        prometheus.io/port: "9902"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: authz-proxy-alertmanager
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.17.1
        ports:
        - containerPort: 8080
        - containerPort: 9902
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9902
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
          - name:  envoy-config
            mountPath: /etc/envoy

      # TODO: for POC only - this will be a separate component
      - name: authz-server
        image: rastislavszabo/authz-server
        ports:
          - containerPort: 50051

      volumes:
        - name:  envoy-config
          configMap:
            name: authz-proxy-alertmanager-config

---
apiVersion: v1
kind: Service
metadata:
  name: authz-proxy-alertmanager
  labels:
    app.kubernetes.io/name: authz-proxy-alertmanager
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: authz-proxy-alertmanager
